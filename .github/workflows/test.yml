name: Test

on:
  workflow_dispatch:
  push:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - '.github/workflows/test.yml'
    branches:
      - main
      - dev
      - dev/**

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          path: ${{ github.event.repository.name }}
            
      - name: Checkout `text-rendering`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/text-rendering
          token: ${{ secrets.PAT }}
          path: text-rendering
      
      - name: Checkout `simulation`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/simulation
          token: ${{ secrets.PAT }}
          path: simulation
      
      - name: Checkout `freetype`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/freetype
          token: ${{ secrets.PAT }}
          path: freetype
      
      - name: Checkout `data`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/data
          token: ${{ secrets.PAT }}
          path: data
      
      - name: Checkout `unmanaged`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/unmanaged
          token: ${{ secrets.PAT }}
          path: unmanaged
      
      - name: Checkout `font-systems`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/font-systems
          token: ${{ secrets.PAT }}
          path: font-systems
      
      - name: Checkout `data-systems`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/data-systems
          token: ${{ secrets.PAT }}
          path: data-systems
      
      - name: Checkout `collections`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/collections
          token: ${{ secrets.PAT }}
          path: collections
      
      - name: Checkout `fonts`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/fonts
          token: ${{ secrets.PAT }}
          path: fonts
      
      - name: Checkout `worlds`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/worlds
          token: ${{ secrets.PAT }}
          path: worlds
      
      - name: Checkout `types`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/types
          token: ${{ secrets.PAT }}
          path: types
      
      - name: Checkout `textures`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/textures
          token: ${{ secrets.PAT }}
          path: textures
      
      - name: Checkout `rendering`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/rendering
          token: ${{ secrets.PAT }}
          path: rendering
      
      - name: Checkout `bin-packer`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/bin-packer
          token: ${{ secrets.PAT }}
          path: bin-packer
      
      - name: Checkout `shaders`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/shaders
          token: ${{ secrets.PAT }}
          path: shaders
      
      - name: Checkout `meshes`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/meshes
          token: ${{ secrets.PAT }}
          path: meshes
      
      - name: Checkout `materials`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/materials
          token: ${{ secrets.PAT }}
          path: materials
            
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version:  10.0.x
            
      - name: Test
        run: dotnet test "${{ github.event.repository.name }}/tests" -c Debug --logger "trx"
            
      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          working-directory: ${{ github.event.repository.name }}
          name: Report
          path: 'tests/TestResults/*.trx'
          reporter: dotnet-trx
          fail-on-error: false